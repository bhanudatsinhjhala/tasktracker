{"remainingRequest":"C:\\Users\\jhala\\Desktop\\vue-crash-2021\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jhala\\Desktop\\vue-crash-2021\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jhala\\Desktop\\vue-crash-2021\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\jhala\\Desktop\\vue-crash-2021\\src\\views\\Home.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\jhala\\Desktop\\vue-crash-2021\\src\\views\\Home.vue","mtime":1627471006545},{"path":"C:\\Users\\jhala\\Desktop\\vue-crash-2021\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jhala\\Desktop\\vue-crash-2021\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\jhala\\Desktop\\vue-crash-2021\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jhala\\Desktop\\vue-crash-2021\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\jhala\\Desktop\\vue-crash-2021\\src\\views\\Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <Tasks\r\n    @toggle-reminder=\"toggleReminder\"\r\n    @delete-task=\"deleteTask\"\r\n    :tasks=\"tasks\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nimport Addtask from '../components/Addtask.vue'\r\nimport Tasks from '../components/Tasks.vue'\r\n\r\nexport default {\r\n     name: 'Home',\r\n     props:{\r\n         showAddTask: Boolean,\r\n     },\r\n     components:{\r\n         Tasks,\r\n         Addtask\r\n     },\r\n     data() {\r\n         return {\r\n             tasks:[]\r\n         }\r\n     },\r\n     methods:{\r\n    toggleAddTask(){\r\n      this.showAddTask =! this.showAddTask\r\n    },\r\n\r\n    async addTask(task){\r\n      const res = await fetch('api/tasks',{\r\n        method: 'POST',\r\n        headers:{\r\n          'Content-type': 'application/json',\r\n        },\r\n         body: JSON.stringify(task),\r\n      })\r\n      const data = await res.json();\r\n\r\n      this.tasks=[...this.tasks, data]\r\n    },\r\n\r\n    async deleteTask(id){\r\n    //  console.log('task', id);\r\n    if(confirm('Are you sure?')){\r\n      const res = await fetch(`api/tasks/${id}`, {\r\n        method: 'DELETE',\r\n      })\r\n\r\n      res.status === 200 ? (this.tasks=this.tasks.filter((task)=> task.id !== id )) \r\n      : alert(\"Error deleting task...\")\r\n    }\r\n    },\r\n    async toggleReminder(id){\r\n      const taskToToggle = await this.fetchTask(id)\r\n\r\n      const updTask = {...taskToToggle, reminder:!taskToToggle.reminder}\r\n\r\n      const res = await fetch(`api/tasks/${id}`,{\r\n        method: 'PUT',\r\n        headers:{\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(updTask),\r\n      })\r\n\r\n      const data = await res.json()\r\n      //console.log(id);\r\n      this.tasks= this.tasks.map((task) => \r\n        task.id == id ? { ...task, reminder: data.reminder} : task\r\n      )\r\n    },    \r\n    async fetchTasks(){\r\n      const res = await fetch('api/tasks')\r\n\r\n      const data = await res.json()\r\n\r\n      return data;\r\n    },\r\n    async fetchTask(id){\r\n      const res = await fetch(`api/tasks/${id}`)\r\n\r\n      const data = await res.json()\r\n\r\n      return data;\r\n    },\r\n  },\r\n  async created(){\r\n    this.tasks = await this.fetchTasks()\r\n  }\r\n}\r\n</script>"],"sourceRoot":""}]}